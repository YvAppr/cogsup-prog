section,code,answer1,answer2,answer3,correct
Dictionaries,"d = {'a': 1, 'b': 2, 'c': 5}
d['a']",1,,,1
Dictionaries,"d = {'a': 1, 'b': 2, 'c': 5}
d['d']",error,,,1
Dictionaries,"d = {}
for k in ['b', 'a', 'c']:
    d[k] = k.upper()
d","{'b': 'B', 'a': 'A', 'c': 'C'}",,,1
Dictionaries,"d = {}
for k in ['b', 'a', 'c']:
    d[k] = k.upper()
list(d)","['b', 'a', 'c']",,,1
Dictionaries,"a = {'x': 1, 'y': 2}
b = {'y': 2, 'x': 1}
a == b",False,True,,1
Dictionaries,"a = {'x': 1, 'y': 2}
b = {'y': 2, 'x': 1}
list(a) == list(b)",True,False,,1
Dictionaries,"responses = 'ctctt'
mapping = {'c': 'chair', 't': 'table'}
[mapping[r] for r in responses]","['chair', 'table', 'chair', 'table', 'table']",,,1
Dictionaries,"mapping = {'c':'chair', 't':'table'}
mapping['chair']",error,,,1
Dictionaries,"responses = ['c','c','t','c','t','t']
counts = {'c': 0, 't': 0}
for r in responses:
    counts[r] += 1
counts","{'c':3,'t':3}",,,1
Dictionaries,"rts = {'trial1': 300, 'trial2': 200}
rts['trial3'] = 450
len(rts)",3,,,1
Dictionaries,"rts = {'trial1': 300, 'trial2': 200}
rts['trial3'] = 450
sum(rts.values())",950,,,1
Dictionaries,"conds = {'A': 'congruent', 'B': 'incongruent'}
seq = ['A', 'B', 'A']
[conds[c] for c in seq if c == 'B']",['incongruent'],,,1
Dictionaries,"trials = [{'stim': 'face'}, {'stim': 'object'}]
for i, t in enumerate(trials, start=1):
    t['id'] = i
trials","[{'stim': 'face', 'id': 1}, {'stim': 'object', 'id': 2}]",,,1
Dictionaries,"trial = {'stimulus': {'type': 'shape', 'name': 'circle'}}
trial['stimulus']['name']",'circle','circle',,0
Dictionaries,"mapping = {'c':'chair','t':'table'}
trials = [{'resp': 'c'}, {'resp': 't'}]
for t in trials:
    t['resp'] = mapping[t['resp']]
trials","[{'resp': 'chair'}, {'resp': 'table'}]",,,1
Dictionaries,"trial = {'stim': 'circle', 'resp': 'c', 'rt': 500}
[ (k, v) for k, v in trial.items() ]",," 2025-09-16 17:19:38 GMT
OK.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Model                  : Voter
Arena                  : 30 x 30
Number of opinions (Q) : 2
Iterations             : 5000000
Display 100 frames (every 50000 iterations)
__________
..........",,0
Dictionaries,"responses = ['c','t','c','c','t']
freq = {}
for r in responses:
    freq[r] = freq.get(r, 0) + 1
freq",,,"7.1 sec.
(1, array([1]), array([900]), [[0, 2], [50000, 2], [100000, 2], [150000, 2], [200000, 2], [250000, 2], [300000, 2], [350000, 2], [400000, 2], [450000, 2], [500000, 2], [550000, 2], [600000, 2], [650000, 2], [700000, 2], [750000, 2], [800000, 2], [850000, 2], [900000, 2], [950000, 2], [1000000, 1], [1050000, 1], [1100000, 1], [1150000, 1], [1200000, 1], [1250000, 1], [1300000, 1], [1350000, 1], [1400000, 1], [1450000, 1], [1500000, 1], [1550000, 1], [1600000, 1], [1650000, 1], [1700000, 1], [1750000, 1], [1800000, 1], [1850000, 1], [1900000, 1], [1950000, 1], [2000000, 1], [2050000, 1], [2100000, 1], [2150000, 1], [2200000, 1], [2250000, 1], [2300000, 1], [2350000, 1], [2400000, 1], [2450000, 1], [2500000, 1], [2550000, 1], [2600000, 1], [2650000, 1], [2700000, 1], [2750000, 1], [2800000, 1], [2850000, 1], [2900000, 1], [2950000, 1], [3000000, 1], [3050000, 1], [3100000, 1], [3150000, 1], [3200000, 1], [3250000, 1], [3300000, 1], [3350000, 1], [3400000, 1], [3450000, 1], [3500000, 1], [3550000, 1], [3600000, 1], [3650000, 1], [3700000, 1], [3750000, 1], [3800000, 1], [3850000, 1], [3900000, 1], [3950000, 1], [4000000, 1], [4050000, 1], [4100000, 1], [4150000, 1], [4200000, 1], [4250000, 1], [4300000, 1], [4350000, 1], [4400000, 1], [4450000, 1], [4500000, 1], [4550000, 1], [4600000, 1], [4650000, 1], [4700000, 1], [4750000, 1], [4800000, 1], [4850000, 1], [4900000, 1], [4950000, 1], [5000000, 1]], [[0, 453, 447], [50000, 556, 344], [100000, 612, 288], [150000, 499, 401], [200000, 449, 451], [250000, 519, 381], [300000, 289, 611], [350000, 425, 475], [400000, 521, 379], [450000, 447, 453], [500000, 434, 466], [550000, 417, 483], [600000, 368, 532], [650000, 349, 551], [700000, 204, 696], [750000, 81, 819], [800000, 51, 849], [850000, 14, 886], [900000, 51, 849], [950000, 1, 899], [1000000, 0, 900], [1050000, 0, 900], [1100000, 0, 900], [1150000, 0, 900], [1200000, 0, 900], [1250000, 0, 900], [1300000, 0, 900], [1350000, 0, 900], [1400000, 0, 900], [1450000, 0, 900], [1500000, 0, 900], [1550000, 0, 900], [1600000, 0, 900], [1650000, 0, 900], [1700000, 0, 900], [1750000, 0, 900], [1800000, 0, 900], [1850000, 0, 900], [1900000, 0, 900], [1950000, 0, 900], [2000000, 0, 900], [2050000, 0, 900], [2100000, 0, 900], [2150000, 0, 900], [2200000, 0, 900], [2250000, 0, 900], [2300000, 0, 900], [2350000, 0, 900], [2400000, 0, 900], [2450000, 0, 900], [2500000, 0, 900], [2550000, 0, 900], [2600000, 0, 900], [2650000, 0, 900], [2700000, 0, 900], [2750000, 0, 900], [2800000, 0, 900], [2850000, 0, 900], [2900000, 0, 900], [2950000, 0, 900], [3000000, 0, 900], [3050000, 0, 900], [3100000, 0, 900], [3150000, 0, 900], [3200000, 0, 900], [3250000, 0, 900], [3300000, 0, 900], [3350000, 0, 900], [3400000, 0, 900], [3450000, 0, 900], [3500000, 0, 900], [3550000, 0, 900], [3600000, 0, 900], [3650000, 0, 900], [3700000, 0, 900], [3750000, 0, 900], [3800000, 0, 900], [3850000, 0, 900], [3900000, 0, 900], [3950000, 0, 900], [4000000, 0, 900], [4050000, 0, 900], [4100000, 0, 900], [4150000, 0, 900], [4200000, 0, 900], [4250000, 0, 900], [4300000, 0, 900], [4350000, 0, 900], [4400000, 0, 900], [4450000, 0, 900], [4500000, 0, 900], [4550000, 0, 900], [4600000, 0, 900], [4650000, 0, 900], [4700000, 0, 900], [4750000, 0, 900], [4800000, 0, 900], [4850000, 0, 900], [4900000, 0, 900], [4950000, 0, 900], [5000000, 0, 900]])",0
Dictionaries,"pairs = [('A','circle'), ('B','square'), ('A','ellipse')]
conds = {}
for cond, stim in pairs:
    conds.setdefault(cond, []).append(stim)
conds","        
 Once  Loop  Reflect",,"['', 'e', 'ii', 'ooo', 'uuuu']
['aa', 'eeee', 'i', 'ooo', '']
[0, 1, 2, 4, 5, 9, 10]
['a', 'b', 'c']
['c', 'c', 'd', 'e', 'c', 'd', 'e']
['a', 'b', 'c', 'a', 'b']
'one and a two and a three and a'
4 4
True
{'b': 'B', 'a': 'A', 'c': 'C'}
['b', 'a', 'c']
['b', 'a', 'c']
['chair', 'table', 'chair', 'table', 'table']
[{'stim': 'face', 'id': 1}, {'stim': 'object', 'id': 2}]
'circle'
[{'resp': 'chair'}, {'resp': 'table'}]",0
Dictionaries,"mapping1 = {'c': 'chair', 't': 'table'}
mapping2 = {v:k for k, v in mapping1.items()}
mapping2['chair']",'c',c,,1
Dictionaries,"trials = [{'rt': 350},{'rt': 500},{'rt': 200}]
[f['rt'] for f in trials if f['rt'] < 400]","[350,200]",,,1
Dictionaries,"correct = {'trial1': 'c', 'trial2': 't'}
resp = {'trial1': 'c', 'trial2': 'c'}

acc = {}
for k in correct:
    acc[k] = int(correct[k] == resp[k])
acc","{'trail1':True,'trial2'=False}","{'trial1': 1, 'trial2': 0}",,1
Dictionaries,"a = {'stim': 'circle'}
b = {'rt': 400}
a | b","{'stim': 'circle', 'rt': 400}",,,1
